version: '3.8'
services:
  seowasil_nginx:
    container_name: seowasil_nginx
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - ./prod/data/nginx:/etc/nginx/conf.d
      - ./prod/data/certbot/conf:/etc/letsencrypt
      - ./prod/data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  
  seowasil_db:
    container_name: seowasil_db
    image: postgres
    restart: always # 컨테이너가 종료되면 항상 다시 시작
    ports:
      - '5432:5432'
    env_file:
      - ./.env.production
    volumes: # 명명된 볼륨으로 바꾸는거 고민해봐야 함. 최소 배포환경에선 명명된 볼륨 사용으로. 이유도 같이
      - ./prod/db:/var/lib/postgresql/data # 호스트의 ./db 디렉토리를 컨테이너의 /var/lib/postgresql/data에 마운트
 
  # docker logs -f seowasil_server
  seowasil_server:
    container_name: seowasil_server
    build:
      context: .
      dockerfile: Dockerfile.prod
    env_file:
      - ./.env.production
    environment:
      - NODE_ENV=production
      - PORT=8000
    ports:
      - '8000:8000'
    depends_on:
      - seowasil_db
    volumes:
      - .:/app
      - /app/node_modules

  
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: nest-pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=seastory624@admin.com
      - PGADMIN_DEFAULT_PASSWORD=Tjddn062$
    ports:
      - '5050:80'
    depends_on:
      - seowasil_db

  certbot:  #certbot 컨테이너 추가 
    image: certbot/certbot
    restart: unless-stopped
    container_name: certbot
    volumes: 
        - ./prod/data/certbot/conf:/etc/letsencrypt    #nginx컨테이너에 certbot컨테이너 연결
        - ./prod/data/certbot/www:/var/www/certbot
    depends_on:
        - seowasil_nginx
    entrypoint : "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

